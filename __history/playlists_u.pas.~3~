unit playlists_u;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, ComCtrls, COMPONENTS, COMMONS, DB;

type
  TfrmPlaylists = class(TForm)
    edtSearch: TEdit;
    btnSearch: TButton;
    pnlNav: TPanel;
    pnlPlaylist: TPanel;
    btnSave: TButton;
    pnlDescription: TPanel;
    lbxPlaylists: TListBox;
    Label1: TLabel;
    pnlInfo: TPanel;
    lbxSongs: TListBox;
    Label2: TLabel;
    Label3: TLabel;
    lbxSongsinPlaylist: TListBox;
    btnRemove: TButton;
    btnAdd: TButton;
    edtName: TLabeledEdit;
    btnFolder: TButton;
    Label4: TLabel;
    btnImage: TButton;
    Label5: TLabel;
    img: TImage;
    btnEdit: TButton;
    btnNew: TButton;
    btnMusicPlayer: TButton;
    btnMainMenu: TButton;
    btnSongs: TButton;
    btnEditSongs: TButton;
    procedure FormCreate(Sender: TObject);
    procedure lbxPlaylistsClick(Sender: TObject);
    procedure btnSearchClick(Sender: TObject);
    procedure btnEditClick(Sender: TObject);
  private
    procedure UpdatePlaylistsLIST;
    procedure SelectPlaylist(play:string);overload;
    procedure SelectPlaylist(index:integer);overload;
    procedure Enabled(ena:boolean);
    var
      epDescription : ExtendablePanel;
      allPlaylists : MArray<string>;
      alwaysEnabled : MArray<TComponent>;
  public
    { Public declarations }
  end;

var
  frmPlaylists: TfrmPlaylists;

implementation

uses database_u;

{$R *.dfm}

procedure TfrmPlaylists.btnEditClick(Sender: TObject);
begin
  Enabled(true);
  btnEdit.Enabled:=false;
end;

procedure TfrmPlaylists.btnSearchClick(Sender: TObject);
begin
  SelectPlaylist(edtSearch.Text)
end;

procedure TfrmPlaylists.Enabled(ena: boolean);
var
  i:integer;
begin
  for I := 0 to ComponentCount - 1 do
    if alwaysEnabled.find(Components[i]) = -1 then
      TGraphicControl(Components[i]).enabled := ena;
end;

procedure TfrmPlaylists.FormCreate(Sender: TObject);
begin
  alwaysEnabled := MArray<TComponent>.Create([edtSearch,btnSearch,btnMusicPlayer,btnMainMenu,
  btnSongs,lbxPlaylists,btnEdit,pnlNav,pnlPlaylist]);
  epDescription := ExtendablePanel.Extend(pnlDescription,'Description');
  allPlaylists := Converter<Variant,string>.convert(
 MDataBase.LoadFieldIntoArray(dmDataBase.tblPlaylists,'name'),function(value:variant):string
 begin
   result:=string(value);
 end);
  UpdatePlaylistsLIST;
  Enabled(false);
end;

procedure TfrmPlaylists.SelectPlaylist(play: string);
var
  specialIndex:integer;
begin
  SelectPlaylist(allPlaylists.findIf(play,Strings.Equivalent));
end;

procedure TfrmPlaylists.lbxPlaylistsClick(Sender: TObject);
begin
  SelectPlaylist(lbxPlaylists.ItemIndex);
end;

procedure TfrmPlaylists.SelectPlaylist(index: integer);
var
fieldname : string;
begin
  btnEdit.Enabled:=true;
  Enabled(false);
  if index <> -1 then
  begin
    lbxPlaylists.ItemIndex :=index;
    fieldname := lbxPlaylists.Items[index];
    MDataBase.UseFields(dmDataBase.tblPlaylists,'name',fieldname,procedure(fields:TFields)
    begin
      epDescription.field.Text := fields.FieldByName('description').AsString;
      edtName.Caption := fields.FieldByName('name').AsString;
    end);
  end;
end;

procedure TfrmPlaylists.UpdatePlaylistsLIST;
var
  temp:string;
begin
  lbxPlaylists.Items.Clear;
  for temp in allPlaylists.container do
    lbxPlaylists.Items.Add(temp);
end;

end.
